<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>KaiChu</title><link>https://kaichu.io/</link><description>Life is unique by how you shape it</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 31 May 2021 08:53:07 +0000</lastBuildDate><atom:link href="https://kaichu.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Docker Tuntap Osx WordPress</title><link>https://kaichu.io/posts/docker-tuntap-osx-wordpress/</link><pubDate>Mon, 31 May 2021 08:53:07 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/docker-tuntap-osx-wordpress/</guid><description>Docker for Mac 由於沒有暴露網路給 Host 直接存取，當我們在 Mac 本地使用 Kind 開發 Kubernetes 就算想使用 metallb 來配置 LoadBalancer 也無法使用。docker-tuntap-osx 就是一個在 Docker for Mac 限制之下暫時可行的解決方案，本篇文章記錄一下步驟且用 WordPress 來示範</description></item><item><title>Devcontainer Zx Pack</title><link>https://kaichu.io/posts/devcontainer-zx-pack/</link><pubDate>Mon, 24 May 2021 10:36:44 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/devcontainer-zx-pack/</guid><description>vscode-dev-containers 透過 Container 有良好隔離性的特性來打造開發環境，官方已經提供了很多種開發環境可以直接使用，且這些 dev container 都可以自行修改 Dockerfile 及 devcontainer.json 來進行功能的擴充及參數配置。Google zx 可以讓我們使用 Javascript 來寫 Bash Script。用 devcontainer 來寫 xz scripts 最後用 Pack 建構成 Container image 交付給其他人使用</description></item><item><title>Build Kuberntes GRPC Health Probe with Pack</title><link>https://kaichu.io/posts/build-kubernetes-grpc-health-probe-with-pack/</link><pubDate>Thu, 13 May 2021 06:37:40 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/build-kubernetes-grpc-health-probe-with-pack/</guid><description>在 Kubernetes Pod 的生命周期中我們可以使用 `livenessProbe` 及 `readinessProbe` 探針來檢查服務健康，本篇文章簡單介紹了如何為 GRPC Service / Client 對應 `grpc_health_probe` 的配置設定及服務健康的檢查，最後使用 buildpack 建構所需 container image 含動態下載 Github `grpc_health_probe` Assets</description></item><item><title>Github Script Repos and Collaborators List Sync</title><link>https://kaichu.io/posts/github-script-repos-and-collaborators-list-sync/</link><pubDate>Fri, 07 May 2021 08:39:11 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/github-script-repos-and-collaborators-list-sync/</guid><description>記錄了如何將整理 Github 公用帳號列表及成員的簡單服務從 GAE cron job 搬到 Github Actions 的使用方式</description></item><item><title>Telepresence 2 Have a Tried</title><link>https://kaichu.io/posts/telepresence-2-have-a-tried/</link><pubDate>Tue, 04 May 2021 02:11:40 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/telepresence-2-have-a-tried/</guid><description>telepresence 是一個有效提升多微服務中連結本地開發的一個好用工具，它解決了 Skaffold 開發中本地 deubg 的不足，期待 GA 的到來</description></item><item><title>Github Assets Cnb</title><link>https://kaichu.io/posts/github-assets-cnb/</link><pubDate>Tue, 20 Apr 2021 21:54:06 +0800</pubDate><author>Author</author><guid>https://kaichu.io/posts/github-assets-cnb/</guid><description>在構建 container image 時，有時候會有需求動態下載 Github repo 中的 Assets 檔案，簡單的方式就是在 `dockerfile` 透過 `curl` 指令來獲取檔案，本篇文章則透過 paketo-buildpacks/packit 來實作一個可以下載 Github Assets 的 buildpack cage1016/github-assets-cnb</description></item><item><title>ghcr.io Pack Build</title><link>https://kaichu.io/posts/ghcr-io-pack-build/</link><pubDate>Wed, 14 Apr 2021 16:23:24 +0800</pubDate><author>Author</author><guid>https://kaichu.io/posts/ghcr-io-pack-build/</guid><description>Github 提供了開源的專案免費的 registry，所以寫個文章來記錄一下，如果使用 .github/workflows/build.yml 中使用 pack 來構建 container image Reference Packages: Container registry now supports GITHUB_TOKEN - GitHub Changelog</description></item><item><title>Build Your Buildpack</title><link>https://kaichu.io/posts/build-your-buildpack/</link><pubDate>Thu, 08 Apr 2021 13:58:19 +0800</pubDate><author>Author</author><guid>https://kaichu.io/posts/build-your-buildpack/</guid><description>在 Buildpack Tips and Tricks 上一篤文章中我們提到了 Cloud Native Buildpacks 專案發起的目的還有一些使用上的心得，一般的使用情境就是選擇適合的 builder (Google, Heroku, Paketo)，必要時可以指定額外的 buildpack 。本篇文章稍後也會介紹 buildpack 基本組成元件、如何編寫自己的 buildpack 及發佈至 buildpack registry</description></item><item><title>Buildpack Tips and Tricks</title><link>https://kaichu.io/posts/buildpack-tips-and-tricks/</link><pubDate>Fri, 02 Apr 2021 23:06:07 +0800</pubDate><author>Author</author><guid>https://kaichu.io/posts/buildpack-tips-and-tricks/</guid><description>CNCF 下的 buildpack 是定義出轉換程式碼至 image 的標準，使用者可以適擇適合的 builder (Google, HeroKu, Paketo) 來產出 container image，除了免去編輯 Dockerfile 的部份、container image layer 有相同的體驗、container image 的安全性交由 builder 來處理等等好處。不過美好的事情背後也是有一些取捨。本篇文章就是最近優化 CI/CD pipeline 流程上使用 buildpack 的心得分享還有遇到的坑及解決方案</description></item><item><title>Cloud Run Button Tips</title><link>https://kaichu.io/posts/cloud-run-button-tips/</link><pubDate>Mon, 22 Mar 2021 13:22:27 +0800</pubDate><author>Author</author><guid>https://kaichu.io/posts/cloud-run-button-tips/</guid><description>Buildpack 讓發開人員免去了寫 Dockerfile 的痛苦，在使用 Cloud Run Button 中可以透過 project.toml 的配置來設定 buildpack 執行時期的參數，在 go code 進入點不在根目錄中的程式可以配置 GOOGLE_BUILDABLE 來指定程式進入點，必免導至 Container image 建立失敗</description></item></channel></rss>