<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - KaiChu</title><link>https://kaichu.io/posts/</link><description>All Posts | KaiChu</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 23 Dec 2021 09:03:20 +0000</lastBuildDate><atom:link href="https://kaichu.io/posts/" rel="self" type="application/rss+xml"/><item><title>Build Jmeter Docker With Plugins</title><link>https://kaichu.io/posts/build-jmeter-docker-with-plugins/</link><pubDate>Thu, 23 Dec 2021 09:03:20 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/build-jmeter-docker-with-plugins/</guid><description>最近工作上有使用 Apache JMeter 的需求，所以剛好有機會使用一下。使用的情境很簡單，就是進行 靜態 website 的壓力測試 static website: cage1016/static-website-example: Static website to use with Cloud Academy labs Nginx: nginx:1.20.2-alpine Jmeter with Plugins: cage1016/docker-jmeter-s390x Jmeter Test Plan Usage Static website</description></item><item><title>Alfred Change Case</title><link>https://kaichu.io/posts/alfred-change-case/</link><pubDate>Tue, 07 Dec 2021 01:32:42 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/alfred-change-case/</guid><description>Alfred 是一個在 Mac 上面增加生產力的工具，舉凡工程師常用的 Github、Google Drive 搜尋到 LeetCode Search 等原都可以在 Alfred 完成，簡直就是太方便了。自己也有曾經想要開發自己的 Alfred 應用，直到遇到 deanishe/awgo 之後就像撿到寶一樣，作為一個 Gopher 也找到適合的工具來開發自己的 Alfred 應用。</description></item><item><title>Devfest21 Taipei Artifact Registry Introduction</title><link>https://kaichu.io/posts/devfest21-taipei-artifact-registry-introduction/</link><pubDate>Tue, 30 Nov 2021 01:53:54 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/devfest21-taipei-artifact-registry-introduction/</guid><description>&lt;p>Artifact Registry 可以說是 Container Registry 的進化版，可讓貴機構集中管理容器映像檔和語言套件 (例如 Maven 和 npm)。Artifact Registry 與 Google Cloud 的工具和執行階段全方位整合，並且支援原生構件通訊協定，讓您輕鬆與持續整合/持續推送軟體更新 (CI/CD) 工具整合，進而設定自動化管道。&lt;/p></description></item><item><title>Cloud Next 21 Pre Event</title><link>https://kaichu.io/posts/cloud-next-21-pre-event/</link><pubDate>Wed, 13 Oct 2021 05:57:04 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/cloud-next-21-pre-event/</guid><description><![CDATA[<p>因為 Covid-19 的原因，去年 Cloud Next 20' 臨時改成線上活動 (7 月 14 日 – 9 月 8 日) 持續了2個月。今年 Cloud Next 21' 就如同以前為期 3 天 (10月 12 日 – 10 月 14 日)的活動，只是改為線上。本次 Meetup ?就在正式活動前跟大家介紹一下如何該安排自己的 Session</p>
<h2 id="top-five-things-to-experience-at-next-21">Top five things to experience at Next ’21</h2>
<ul>
<li>Kick off each morning with a keynote</li>
<li>Customize your content</li>
<li>Engage with experts</li>
<li>Dive into demos</li>
<li>Explore the impact of DEI</li>
</ul>]]></description></item><item><title>K3s Nats tls by openssl</title><link>https://kaichu.io/posts/k3s-nats-tls-openssl/</link><pubDate>Wed, 11 Aug 2021 06:01:13 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/k3s-nats-tls-openssl/</guid><description>在開發 Kubernetes 應用程式時常使用 NATS 來作為內部 Pub/Sub 傳遞非同步訊息時使用，有時候也有對外開放的需求。而在本地機器開發時會採用輕量的 k8s cluster 解決方案，如 Kind, k3s, minikube 等來減輕本地開發資原的壓力，不過基於 container 的方式還是有一些限制，本篇文章以 k3s 為基礎來搭設開啟 TLS 的 NATS 服務器在本地的使用方式。</description></item><item><title>Coscup X Ruby Conf Tw 2021 Google Cloud Buildpacks</title><link>https://kaichu.io/posts/coscup-x-ruby-conf-tw-2021-google-cloud-buildpacks/</link><pubDate>Mon, 02 Aug 2021 01:57:32 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/coscup-x-ruby-conf-tw-2021-google-cloud-buildpacks/</guid><description><![CDATA[<h3 id="tr409-1-google-技術-x-公共參與-x-開源">TR409-1 Google 技術 x 公共參與 x 開源</h3>
<blockquote>
<p><a href="https://coscup.org/2021/zh-TW/session/J3X8SE" target="_blank" rel="noopener noreffer">Google Cloud Buildpacks 剖析與實踐 - COSCUP 2021 | Conference for Open Source Coders, Users, and Promoters</a></p>
</blockquote>
<p>CNCF 的 Cloud Native Buildpacks 專案已經在 2020 已經從 Sandbox 項目變成成了 Incubation 項目。Cloud Native Buildpacks (CNB) 的出現定義了轉換程式碼至 OCI 的標準，可以讓開發人員專注在本身功能上面，將安全性及依賴套件打包相關的部份交由 CNB 負責。</p>]]></description></item><item><title>NATS quick expose for local test</title><link>https://kaichu.io/posts/nats-quick-expose-for-local-test/</link><pubDate>Fri, 30 Jul 2021 06:58:47 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/nats-quick-expose-for-local-test/</guid><description>記錄如何在本機端使用 KIND/K3d 開發 Kubernetes 應用程式時如果需要使用 NATS 時，在不使用 Ingress 時快速 Expose NTAS 給 Client 使用</description></item><item><title>Pack 0.19.0 Solved Invalid Cross Device Link at Google Cloud Build</title><link>https://kaichu.io/posts/pack-solved-invalid-cross-device-link-at-google-cloud-build/</link><pubDate>Thu, 17 Jun 2021 03:23:23 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/pack-solved-invalid-cross-device-link-at-google-cloud-build/</guid><description>Pack 0.19.0 終於發佈了，這一個版本包含了解決在 Google Cloud Build 上執行 Pack 會遇到 Invalid Cross Device Link 的錯誤。這篇文章詳細說明了遇到的問題、回報 Issue 及解決的方式</description></item><item><title>Velero 初探簡報</title><link>https://kaichu.io/posts/velero-research-report/</link><pubDate>Tue, 15 Jun 2021 02:48:42 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/velero-research-report/</guid><description>在上一篇文章 Ｖelero 初探與實踐中我們看到了作為一個開源的 Kubernetes 集群備份和遷移工具定義了那些 CRD 來達成備份遷移的動作。在之後就對內作了一份簡報基於 Velero 1.6 版本的文件從介紹/安裝/基本使用到 Demo 的實作當中的心得，文篇文章就是簡報的摘要</description></item><item><title>Velero 初探與實踐</title><link>https://kaichu.io/posts/velero-research-practice/</link><pubDate>Wed, 02 Jun 2021 08:23:06 +0000</pubDate><author>Author</author><guid>https://kaichu.io/posts/velero-research-practice/</guid><description>文篇文章算是研究 Velero 的一些心得，及使用 Velero + Restic 進行跨 Provider 遷移集群的原理、注意事項及操作的過程，成功的將 Mac 本地的 KIND k8s 中的 Rocketchat workload 無縫的遷移到 GKE 中，中間的過程還算是簡單方便(如果沒有跨 Provider 有 Cloud Provider 的原生支援會更快速)，算是一個開源友好的集群遷移工具，不過魔鬼總是藏在細節中，官方文件最好是好好的看一看，要了解其中的限制</description></item></channel></rss>