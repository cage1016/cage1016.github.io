<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GCP on KaiChu</title><link>https://kaichu.io/tags/gcp/</link><description>Recent content in GCP on KaiChu</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 16 Mar 2020 02:00:55 +0000</lastBuildDate><atom:link href="https://kaichu.io/tags/gcp/index.xml" rel="self" type="application/rss+xml"/><item><title>Establishing a Websocket PUBSUB server with NATS and Google App Engine</title><link>https://kaichu.io/posts/gae-custom-ws/</link><pubDate>Mon, 16 Mar 2020 02:00:55 +0000</pubDate><guid>https://kaichu.io/posts/gae-custom-ws/</guid><description>在設計 API server 的時候會有遇到即時訊息傳遞的需求，同步可以用 GRPC 建立連線來溝通，為了降低系統的耦合性，可以選擇非同步的方式。而 PubSub 結合 websocket 是常用的方式。對於一位 Gopher 來說，NATS 是 CNCF 下面中關於訊息傳遞的開源專案且對</description></item><item><title>CloudFunctions Google maps service</title><link>https://kaichu.io/posts/cloudfunctions-google-maps-services/</link><pubDate>Fri, 18 Aug 2017 00:42:29 +0000</pubDate><guid>https://kaichu.io/posts/cloudfunctions-google-maps-services/</guid><description>&lt;h3 id="waldo-gcp">Waldo-gcp&lt;/h3>
&lt;p>&lt;a href="https://www.slideshare.net/cagechung/waldogcp">Waldo-gcp&lt;/a> 在 2015 時 Google I/O Extended Taipei 時分享過一個計算最佳路徑的微服務。在提供幾組 Google Maps 上有效的地址，透過 Google Maps Distance Matrix API 來計算出每一個點一點之間的旅行距離及旅行時間。再透過基因演算出計算出周遊一圈旅行最短路徑&lt;/p>
&lt;div class="highlight">&lt;pre class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="c1"># 提供5組 Google Maps 上有效的地址&lt;/span>
台北市內湖區瑞光路227號1樓,
高雄市鼓山區美術東二路106號,
台南市長榮路一段175號,
臺北市松山區南京東路五段123巷1弄15號,
高雄市五福四路131號2樓
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Google Announce Application Default Credentials (ADC)</title><link>https://kaichu.io/posts/adc/</link><pubDate>Tue, 21 Jul 2015 10:04:40 +0800</pubDate><guid>https://kaichu.io/posts/adc/</guid><description>&lt;p>今天 Google 公佈了 &lt;a href="http://googlecloudplatform.blogspot.tw/2015/07/Easier-Auth-for-Google-Cloud-APIs-Introducing-the-Application-Default-Credentials-feature.html">Application Default Credentials (ADC)&lt;/a>，一個可以讓使用者更方便在 GCP 上去界接其他的需要使用 OAuth 存取的服務如 &lt;a href="https://cloud-dot-devsite.googleplex.com/storage">Google Cloud Storage&lt;/a>、&lt;a href="https://cloud-dot-devsite.googleplex.com/bigquery">Google BigQuery&lt;/a>。這對常常寫 GAE 的我來說又更方便了。&lt;/p>
&lt;p>在 GCP 專案建立之後，預設會自動產生 &lt;a href="https://developers.google.com/accounts/docs/OAuth2ServiceAccount">Service Accounts&lt;/a>，
這些內建的 Service Accounts 在進行 Server to Server 的存取時只需要應用程式本身的認証，直接使用 &lt;code>AppAssertionCredentials&lt;/code> 可以不需透過 &lt;code>Flow&lt;/code> 來建立 &lt;code>Credentials&lt;/code>物件&lt;/p></description></item></channel></rss>