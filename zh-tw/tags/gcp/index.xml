<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>GCP - 標籤 - KaiChu</title><link>https://kaichu.io/zh-tw/tags/gcp/</link><description>GCP - 標籤 - KaiChu</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 27 Mar 2022 07:16:36 +0000</lastBuildDate><atom:link href="https://kaichu.io/zh-tw/tags/gcp/" rel="self" type="application/rss+xml"/><item><title>Deploy Gokit Todo to GAE With Cloud Build From Github Repo</title><link>https://kaichu.io/zh-tw/posts/deploy-gokit-todo-to-gae-with-cloud-build-from-github-repo/</link><pubDate>Sun, 27 Mar 2022 07:16:36 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/deploy-gokit-todo-to-gae-with-cloud-build-from-github-repo/</guid><description>gokit-todo，gokit-todo-frontend 原先是基於 Kubernetes 上開發的應用程式，在程式碼套件依賴低、任務相對單純的應用。我們可以很容易的對其進行移轉至 Google App Engine 的環境上來執行，搭配 Google Cloud Build 及 Github 一超進行 CI/CD 的開發流程。</description></item><item><title>Github Assets Cnb</title><link>https://kaichu.io/zh-tw/posts/github-assets-cnb/</link><pubDate>Tue, 20 Apr 2021 21:54:06 +0800</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/github-assets-cnb/</guid><description>在構建 container image 時，有時候會有需求動態下載 Github repo 中的 Assets 檔案，簡單的方式就是在 `dockerfile` 透過 `curl` 指令來獲取檔案，本篇文章則透過 paketo-buildpacks/packit 來實作一個可以下載 Github Assets 的 buildpack cage1016/github-assets-cnb</description></item><item><title>Build Your Buildpack</title><link>https://kaichu.io/zh-tw/posts/build-your-buildpack/</link><pubDate>Thu, 08 Apr 2021 13:58:19 +0800</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/build-your-buildpack/</guid><description>在 Buildpack Tips and Tricks 上一篤文章中我們提到了 Cloud Native Buildpacks 專案發起的目的還有一些使用上的心得，一般的使用情境就是選擇適合的 builder (Google, Heroku, Paketo)，必要時可以指定額外的 buildpack 。本篇文章稍後也會介紹 buildpack 基本組成元件、如何編寫自己的 buildpack 及發佈至 buildpack registry</description></item><item><title>Buildpack Tips and Tricks</title><link>https://kaichu.io/zh-tw/posts/buildpack-tips-and-tricks/</link><pubDate>Fri, 02 Apr 2021 23:06:07 +0800</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/buildpack-tips-and-tricks/</guid><description>CNCF 下的 buildpack 是定義出轉換程式碼至 image 的標準，使用者可以適擇適合的 builder (Google, HeroKu, Paketo) 來產出 container image，除了免去編輯 Dockerfile 的部份、container image layer 有相同的體驗、container image 的安全性交由 builder 來處理等等好處。不過美好的事情背後也是有一些取捨。本篇文章就是最近優化 CI/CD pipeline 流程上使用 buildpack 的心得分享還有遇到的坑及解決方案</description></item><item><title>Cloud Run Button Tips</title><link>https://kaichu.io/zh-tw/posts/cloud-run-button-tips/</link><pubDate>Mon, 22 Mar 2021 13:22:27 +0800</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/cloud-run-button-tips/</guid><description>Buildpack 讓發開人員免去了寫 Dockerfile 的痛苦，在使用 Cloud Run Button 中可以透過 project.toml 的配置來設定 buildpack 執行時期的參數，在 go code 進入點不在根目錄中的程式可以配置 GOOGLE_BUILDABLE 來指定程式進入點，必免導至 Container image 建立失敗</description></item><item><title>Establishing a Websocket PUBSUB server with NATS and Google App Engine</title><link>https://kaichu.io/zh-tw/posts/gae-custom-ws/</link><pubDate>Mon, 16 Mar 2020 02:00:55 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/gae-custom-ws/</guid><description>透過 Google App Engine 和 NATS 建立 Websocket PUBSUB 伺服器</description></item><item><title>CloudFunctions Google maps service</title><link>https://kaichu.io/zh-tw/posts/cloudfunctions-google-maps-services/</link><pubDate>Fri, 18 Aug 2017 00:42:29 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/cloudfunctions-google-maps-services/</guid><description>fetch travel distances and duration by Google Maps Distance Matrix API via Google Cloud Functions</description></item><item><title>Google Announce Application Default Credentials (ADC)</title><link>https://kaichu.io/zh-tw/posts/adc/</link><pubDate>Tue, 21 Jul 2015 10:04:40 +0800</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/adc/</guid><description>今天 Google 公佈了 Application Default Credentials (ADC), 一個可以讓使用者更方便在 GCP 上去界接其他的需要使用 OAuth 存取的服務</description></item></channel></rss>