<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>minio - 標籤 - KaiChu</title><link>https://kaichu.io/zh-tw/tags/minio/</link><description>minio - 標籤 - KaiChu</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 15 Jun 2021 02:48:42 +0000</lastBuildDate><atom:link href="https://kaichu.io/zh-tw/tags/minio/" rel="self" type="application/rss+xml"/><item><title>Velero 初探簡報</title><link>https://kaichu.io/zh-tw/posts/velero-research-report/</link><pubDate>Tue, 15 Jun 2021 02:48:42 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/velero-research-report/</guid><description>在上一篇文章 Ｖelero 初探與實踐中我們看到了作為一個開源的 Kubernetes 集群備份和遷移工具定義了那些 CRD 來達成備份遷移的動作。在之後就對內作了一份簡報基於 Velero 1.6 版本的文件從介紹/安裝/基本使用到 Demo 的實作當中的心得，文篇文章就是簡報的摘要</description></item><item><title>Velero 初探與實踐</title><link>https://kaichu.io/zh-tw/posts/velero-research-practice/</link><pubDate>Wed, 02 Jun 2021 08:23:06 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/velero-research-practice/</guid><description>文篇文章算是研究 Velero 的一些心得，及使用 Velero + Restic 進行跨 Provider 遷移集群的原理、注意事項及操作的過程，成功的將 Mac 本地的 KIND k8s 中的 Rocketchat workload 無縫的遷移到 GKE 中，中間的過程還算是簡單方便(如果沒有跨 Provider 有 Cloud Provider 的原生支援會更快速)，算是一個開源友好的集群遷移工具，不過魔鬼總是藏在細節中，官方文件最好是好好的看一看，要了解其中的限制</description></item></channel></rss>