<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>kubernetes - 標籤 - KaiChu</title><link>https://kaichu.io/zh-tw/tags/kubernetes/</link><description>kubernetes - 標籤 - KaiChu</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 30 Jul 2021 06:58:47 +0000</lastBuildDate><atom:link href="https://kaichu.io/zh-tw/tags/kubernetes/" rel="self" type="application/rss+xml"/><item><title>NATS quick expose for local test</title><link>https://kaichu.io/zh-tw/posts/nats-quick-expose-for-local-test/</link><pubDate>Fri, 30 Jul 2021 06:58:47 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/nats-quick-expose-for-local-test/</guid><description>記錄如何在本機端使用 KIND/K3d 開發 Kubernetes 應用程式時如果需要使用 NATS 時，在不使用 Ingress 時快速 Expose NTAS 給 Client 使用</description></item><item><title>Velero 初探簡報</title><link>https://kaichu.io/zh-tw/posts/velero-research-report/</link><pubDate>Tue, 15 Jun 2021 02:48:42 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/velero-research-report/</guid><description>在上一篇文章 Ｖelero 初探與實踐中我們看到了作為一個開源的 Kubernetes 集群備份和遷移工具定義了那些 CRD 來達成備份遷移的動作。在之後就對內作了一份簡報基於 Velero 1.6 版本的文件從介紹/安裝/基本使用到 Demo 的實作當中的心得，文篇文章就是簡報的摘要</description></item><item><title>Velero 初探與實踐</title><link>https://kaichu.io/zh-tw/posts/velero-research-practice/</link><pubDate>Wed, 02 Jun 2021 08:23:06 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/velero-research-practice/</guid><description>文篇文章算是研究 Velero 的一些心得，及使用 Velero + Restic 進行跨 Provider 遷移集群的原理、注意事項及操作的過程，成功的將 Mac 本地的 KIND k8s 中的 Rocketchat workload 無縫的遷移到 GKE 中，中間的過程還算是簡單方便(如果沒有跨 Provider 有 Cloud Provider 的原生支援會更快速)，算是一個開源友好的集群遷移工具，不過魔鬼總是藏在細節中，官方文件最好是好好的看一看，要了解其中的限制</description></item><item><title>Build Kuberntes GRPC Health Probe with Pack</title><link>https://kaichu.io/zh-tw/posts/build-kubernetes-grpc-health-probe-with-pack/</link><pubDate>Thu, 13 May 2021 06:37:40 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/build-kubernetes-grpc-health-probe-with-pack/</guid><description>在 Kubernetes Pod 的生命周期中我們可以使用 `livenessProbe` 及 `readinessProbe` 探針來檢查服務健康，本篇文章簡單介紹了如何為 GRPC Service / Client 對應 `grpc_health_probe` 的配置設定及服務健康的檢查，最後使用 buildpack 建構所需 container image 含動態下載 Github `grpc_health_probe` Assets</description></item><item><title>Telepresence 2 Have a Tried</title><link>https://kaichu.io/zh-tw/posts/telepresence-2-have-a-tried/</link><pubDate>Tue, 04 May 2021 02:11:40 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/telepresence-2-have-a-tried/</guid><description>telepresence 是一個有效提升多微服務中連結本地開發的一個好用工具，它解決了 Skaffold 開發中本地 deubg 的不足，期待 GA 的到來</description></item><item><title>GoPherCon 2020 TW: 如何透過 Go-kit 快速搭建微服務架構應用程式實戰</title><link>https://kaichu.io/zh-tw/posts/gokit-engineering-operation/</link><pubDate>Mon, 16 Nov 2020 10:50:48 +0800</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/gokit-engineering-operation/</guid><description>Golang 也因為開源、程式語法的簡潔開始受到程式開發人員的喜好。也因些在搭建微服務架構應用程式的時候有很多選擇，在 Web 框架中就有 Gin, Echo, Beego 等等，每一個 Web 框架都有其不同的特性，而 Go-Kit 是一個微服務開發的工具鏈，本場次將基於 Kuberentes/Istio 透過 Go-kit 搭建微服務架構應用程式實戰中的工程項目進行說明</description></item><item><title>Gokit microservice demo</title><link>https://kaichu.io/zh-tw/posts/gokit-ms-demo/</link><pubDate>Tue, 03 Nov 2020 17:50:10 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/gokit-ms-demo/</guid><description>Kubernetes Nginx ingress/Istio manifest for Gokit microservice demo</description></item><item><title>Devfest20 How to Debug Microservices on Kubernetes as a Pros</title><link>https://kaichu.io/zh-tw/posts/devfest20-how-to-debug-microservices-on-kubernetes-as-a-pros/</link><pubDate>Tue, 20 Oct 2020 05:12:14 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/devfest20-how-to-debug-microservices-on-kubernetes-as-a-pros/</guid><description>在雲原生時代，基於 Kubernetes 的微服務應用程式架構模式已經快變成基本動作，本議程將介紹如何在 Kubernetes 進行 Debug 來加快開發的速度</description></item><item><title>Devfest19 Build Go Kit Microservices at Kubernetes With Ease</title><link>https://kaichu.io/zh-tw/posts/devfest19-build-go-kit-microservices-at-kubernetes-with-ease/</link><pubDate>Sun, 01 Dec 2019 05:25:44 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/devfest19-build-go-kit-microservices-at-kubernetes-with-ease/</guid><description>Gokit is microservice tookit and use Service/Endpoint/Transport to strict separation of concerns design. This talk to use go-kit develop microservice application integrate with consul, zipkin, prometheus, etc service and deploy on Kubernetes</description></item><item><title>Skaffold debug goland</title><link>https://kaichu.io/zh-tw/posts/skaffold-debug-goland/</link><pubDate>Fri, 04 Oct 2019 01:03:16 +0000</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/skaffold-debug-goland/</guid><description>skaffold v38.0 開始支持 Go container debugging support，非常大程度解決先前 remote debug golang 的痛苦</description></item></channel></rss>