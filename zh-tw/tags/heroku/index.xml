<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>heroku - 標籤 - KaiChu</title><link>https://kaichu.io/zh-tw/tags/heroku/</link><description>heroku - 標籤 - KaiChu</description><generator>Hugo -- gohugo.io</generator><language>zh-TW</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 08 Apr 2021 13:58:19 +0800</lastBuildDate><atom:link href="https://kaichu.io/zh-tw/tags/heroku/" rel="self" type="application/rss+xml"/><item><title>Build Your Buildpack</title><link>https://kaichu.io/zh-tw/posts/build-your-buildpack/</link><pubDate>Thu, 08 Apr 2021 13:58:19 +0800</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/build-your-buildpack/</guid><description>在 Buildpack Tips and Tricks 上一篤文章中我們提到了 Cloud Native Buildpacks 專案發起的目的還有一些使用上的心得，一般的使用情境就是選擇適合的 builder (Google, Heroku, Paketo)，必要時可以指定額外的 buildpack 。本篇文章稍後也會介紹 buildpack 基本組成元件、如何編寫自己的 buildpack 及發佈至 buildpack registry</description></item><item><title>Buildpack Tips and Tricks</title><link>https://kaichu.io/zh-tw/posts/buildpack-tips-and-tricks/</link><pubDate>Fri, 02 Apr 2021 23:06:07 +0800</pubDate><author>作者</author><guid>https://kaichu.io/zh-tw/posts/buildpack-tips-and-tricks/</guid><description>CNCF 下的 buildpack 是定義出轉換程式碼至 image 的標準，使用者可以適擇適合的 builder (Google, HeroKu, Paketo) 來產出 container image，除了免去編輯 Dockerfile 的部份、container image layer 有相同的體驗、container image 的安全性交由 builder 來處理等等好處。不過美好的事情背後也是有一些取捨。本篇文章就是最近優化 CI/CD pipeline 流程上使用 buildpack 的心得分享還有遇到的坑及解決方案</description></item></channel></rss>